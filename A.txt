SDSDSDSD
'S'D
SD MNJSDJKDB L

clc;
clear all;

%% Sample Generate
N=5000;
a_real =[3/10,5/10,2/10];
mu_real = [7,12;12,7;14,15];
cov_real(:,:,1) = [1,0;0,1];
cov_real(:,:,2) = [3,1;1,3];
cov_real(:,:,3) = [3,1;1,3];
X_1 = mvnrnd(mu_real(1,:),cov_real(:,:,1),N*a_real(1));
X_2 = mvnrnd(mu_real(2,:),cov_real(:,:,2),N*a_real(2));
X_3 = mvnrnd(mu_real(3,:),cov_real(:,:,2),N*a_real(3));

X=[X_1;X_2;X_3];
X = X(randperm(size(X,1)),:);

%% Sample Ploting
x = 0:0.5:20;
y = 0:0.5:20;
[x y]=meshgrid(x,y);
mesh = [x(:),y(:)];

z_real = a_real(1)*mvnpdf(mesh,mu_real(1,:),cov_real(:,:,1))+...
        a_real(2)* mvnpdf(mesh,mu_real(2,:),cov_real(:,:,2))+...
        a_real(3)* mvnpdf(mesh,mu_real(3,:),cov_real(:,:,3));
subplot(2,3,1);
plot(X_1(:,1),X_1(:,2),'x',X_2(:,1),X_2(:,2),'o',X_3(:,1),X_3(:,2),'<')

subplot(2,3,2);
contour(x,y,reshape(z_real,size(x,2),size(y,2)));

subplot(2,3,3);
surf(x,y,reshape(z_real,size(x,2),size(y,2)));

subplot(2,3,4);
plot(X(:,1),X(:,2),'x');
%%subplot(2,2,3);
%%surf(x,y,reshape(z_real,size(x,2),size(y,2)));
%%shading interp;
pause;









%% Parameter Initialization
a = [1/3, 1/3,1/3];
cov(:,:,1) = [1,0;0,1];
cov(:,:,2) = [1,0;0,1];
cov(:,:,3) = [1,0;0,1];
mu_y_init = (max(X(:,1))+min(X(:,1)))/2;
mu_x1_init = max(X(:,2))/4+3*min(X(:,2))/4;
mu_x2_init = 2*max(X(:,2))/4+2*min(X(:,2))/4;
mu_x3_init = 3*max(X(:,2))/4+1*min(X(:,2))/4;
w = zeros(size(X,1),length(a)); %%w(i,j),i?????,j?????,w(i,j)??????i????j???,?????i???
mu = [mu_x1_init,mu_y_init;mu_x2_init,mu_y_init;mu_x3_init,mu_y_init];
disp("Initial MEAN");
disp(mu);
disp("");
%% EM Implementation
iter = 40;
for i = 1:iter
    %% Expectaion: ?????(?????)?????????,?????????????????
    for j = 1 : length(a)
        w(:,j)=a(j)*mvnpdf(X,mu(j,:),cov(:,:,j));
    end   
w=w./repmat(sum(w,2),1,size(w,2)); %%????./??,?????w???????,????????,????w(:,1)+w(:,2)??

%% Maximum: ?????(?????)????????????????,???????????
    a = sum(w,1)./size(w,1); %%?w?????????????????????
    
    mu = w'*X; %%????X?????????????,mu(i,j),i???,j????
    mu= mu./repmat((sum(w,1))',1,size(mu,2));
    pause;
    disp("ITER->>>   ");
    disp(i);
    disp("INTERMEDIATE MEAN");
    disp(size(mu));
    disp(mu);
    pause;
    for j = 1 : length(a)
        vari = repmat(w(:,j),1,size(X,2)).*(X- repmat(mu(j,:),size(X,1),1)); %%????????X????????,??w,(????????????X)
        cov(:,:,j) = (vari'*vari)/sum(w(:,j),1);      
    end;
    disp(size(cov));
    disp(cov);
    pause;
end;
pause;
disp("FINAL MEAN");
disp(size(mu));
disp(mu);
disp(size(cov));
disp(cov);
%% Estimation = X(randperm(size(X,1)),:);
pause;
[c estimate] = max(w,[],2);

%% Estimation Plotting
z = a(1)*mvnpdf(mesh,mu(1,:),cov(:,:,1))+...
        a(2)* mvnpdf(mesh,mu(2,:),cov(:,:,2))+...
        a(3)* mvnpdf(mesh,mu(3,:),cov(:,:,3));
subplot(2,3,5);
contour(x,y,reshape(z,size(x,2),size(y,2)));

one = find(estimate==1); 
two = find(estimate == 2);
three = find(estimate == 3);
% Plot Examples
subplot(2,3,6);
plot(X(one, 1), X(one, 2), 'x',X(two, 1), X(two, 2), 'o', X(three, 1), X(three, 2), '<');
%plot(X(neg, 1), X(neg, 2), 'o');

%% Build-in EM Implementation

%options = statset('Display','final');
%gm = gmdistribution.fit(X,2,'Options',options);
%subplot(2,2,4);
%ezcontour(@(x,y)pdf(gm,[x y]),[0 20],[0 20]);


/////
clear all
x=4;
randn("seed",x);
rand("seed",x);
function [ y ] = gauss_dist(x,meu,sigma )
%GAUSS_DIST function for gaussian distribution
    y=(1/(sqrt(2*pi*sigma)))*exp((-(x-meu).^2)/(2*sigma));
end

data=[-0.39 0.12 0.94 1.67 1.76 2.44 3.72 4.28 4.92 5.53 0.06 0.48 1.01 1.68 1.80 3.25 4.12 4.60 5.28 6.22];


temp=randperm(length(data));
disp(temp);
disp(size(temp));
piecap(1)=0.5;
meucap1(1)=data(temp(1));
disp("Meucap-before");
disp(meucap1);
disp("Meucap after");
meucap2(1)=data(temp(2));
sigmacap1(1)=var(data);
sigmacap2(1)=var(data);

for i = 1:5000
    Qq1=gauss_dist(data,meucap1(i),sigmacap1(i));
    Qq2=gauss_dist(data,meucap2(i),sigmacap2(i));
    log_likelihood(i)=sum(log(((1-piecap(i))*Qq1) + (piecap(i)*Qq2)));

    responsibilities(i,:)=(piecap(i)*Qq2)./(((1-piecap(i))*Qq1)+(piecap(i)*Qq2));

    meucap1(i+1)=sum((1-responsibilities(i,:)).*data)/sum(1-responsibilities(i,:));
    meucap2(i+1)=sum((responsibilities(i,:)).*data)/sum(responsibilities(i,:));

    sigmacap1(i+1)=sum((1-responsibilities(i,:)).*((data-meucap1(i)).^2))/sum(1-responsibilities(i,:));
    sigmacap2(i+1)=sum((responsibilities(i,:)).*((data-meucap2(i)).^2))/sum(responsibilities(i,:));

    piecap(i+1)=sum(responsibilities(i,:))/length(data);
end;
%disp(log_likelihood);
disp(meucap1);
figure
    plot(log_likelihood);
    xlabel('Iteration');
    ylabel('Observed Data Log-likelihood');
    grid minor;
    
    
    
    function [Mu, Sigma, Gamma] = gmm(X, num_clusters)
    [num_samples, dim] = size(X);
     
    Mu = rand(num_clusters, dim);
    Sigma = zeros(dim, dim, num_clusters);
    for k = 1: num_clusters
        Sigma(:,:,k) = eye(dim);
    end;
    Npdf = zeros(num_samples, num_clusters);
    
    pi = (num_samples / num_clusters) * ones(num_clusters, 1);    
    num_iters = 0;
    while num_iters < 100
        for k = 1: num_clusters
            Npdf(:,k) = mvnpdf(X, Mu(k,:), Sigma(:,:,k));
        end;
        Gamma = diag(1 ./ (Npdf * pi)) * (Npdf * diag(pi));
        
        num_per_cluster = sum(Gamma)';
        pi = num_per_cluster / num_samples;
        Mu = diag(1 ./ num_per_cluster) * Gamma' * X;
        for k = 1: num_clusters
            Bias = X - ones(num_samples, 1) * Mu(k,:);
            Sigma(:,:,k) = (1 / num_per_cluster(k)) * (Bias' * diag(Gamma(:,k)) * Bias);
        end;        
        num_iters = num_iters + 1;
    end;
end
    
